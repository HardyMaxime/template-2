{"version":3,"sources":["src/js/carousel.js"],"names":["CarouselTouchPlugin","carousel","container","addEventListener","e","preventDefault","startDrag","bind","window","drag","endDrag","touches","length","origin","x","screenX","y","screenY","width","containerWidth","disableTransition","point","translate","Math","abs","stopPropagation","baseTranslate","currentItem","items","lastTranslate","enableTransition","carouselWidth","next","prev","gotoItem","Carousel","element","options","Object","assign","slidesToScroll","slidesVisible","loop","pagination","navigation","infinite","Error","children","slice","call","isMobile","moveCallbacks","offset","root","createDivWithClass","setAttribute","appendChild","map","child","item","console","error","cloneNode","forEach","setStyle","createNavigation","createPagination","cb","onWindowResize","key","resetInfinite","ratio","style","nextButton","prevButton","onMove","index","classList","add","remove","undefined","buttons","i","button","push","count","activeButton","floor","percent","transform","animation","translateX","offsetHeight","mobile","innerWidth","className","div","document","createElement","transition","offsetWidth","onReady","querySelector","readyState"],"mappings":"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","file":"carousel.d0eda0d5.map","sourceRoot":"..","sourcesContent":["/**\r\n * Permet de rajouter la navigation tactile pour le carousel\r\n */\r\nclass CarouselTouchPlugin {\r\n\r\n    /**\r\n     * @param {Carousel} carousel\r\n     */\r\n    constructor(carousel) {\r\n        carousel.container.addEventListener('dragstart', e => e.preventDefault())\r\n        carousel.container.addEventListener('mousedown', this.startDrag.bind(this))\r\n        carousel.container.addEventListener('touchstart', this.startDrag.bind(this))\r\n        window.addEventListener('mousemove', this.drag.bind(this))\r\n        window.addEventListener('touchmove', this.drag.bind(this))\r\n        window.addEventListener('touchend', this.endDrag.bind(this))\r\n        window.addEventListener('mouseup', this.endDrag.bind(this))\r\n        window.addEventListener('touchcancel', this.endDrag.bind(this))\r\n        this.carousel = carousel\r\n    }\r\n\r\n    /**\r\n     * Démarre le déplacement au touché\r\n     * @param {MouseEvent|TouchEvent} e\r\n     */\r\n    startDrag(e) {\r\n        if (e.touches) {\r\n            if (e.touches.length > 1) {\r\n                return\r\n            } else {\r\n                e = e.touches[0]\r\n            }\r\n        }\r\n        this.origin = { x: e.screenX, y: e.screenY }\r\n        this.width = this.carousel.containerWidth\r\n        this.carousel.disableTransition()\r\n    }\r\n\r\n    /**\r\n     * Déplacement\r\n     * @param {MouseEvent|TouchEvent} e\r\n     */\r\n    drag(e) {\r\n        if (this.origin) {\r\n            let point = e.touches ? e.touches[0] : e\r\n            let translate = { x: point.screenX - this.origin.x, y: point.screenY - this.origin.y }\r\n            if (e.touches && Math.abs(translate.x) > Math.abs(translate.y)) {\r\n                e.preventDefault()\r\n                e.stopPropagation()\r\n            }\r\n            let baseTranslate = this.carousel.currentItem * -100 / this.carousel.items.length\r\n            this.lastTranslate = translate\r\n            this.carousel.translate(baseTranslate + 100 * translate.x / this.width)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fin du déplacement\r\n     * @param {MouseEvent|TouchEvent} e\r\n     */\r\n    endDrag(e) {\r\n        if (this.origin && this.lastTranslate) {\r\n            this.carousel.enableTransition()\r\n            if (Math.abs(this.lastTranslate.x / this.carousel.carouselWidth) > 0.2) {\r\n                if (this.lastTranslate.x < 0) {\r\n                    this.carousel.next()\r\n                } else {\r\n                    this.carousel.prev()\r\n                }\r\n            } else {\r\n                this.carousel.gotoItem(this.carousel.currentItem)\r\n            }\r\n        }\r\n        this.origin = null\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Carousel {\r\n    /**\r\n     * This callback type is called `requestCallback` and is displayed as a global symbol.\r\n     *\r\n     * @callback moveCallback\r\n     * @param {number} index\r\n     */\r\n\r\n    /**\r\n     * @param {HTMLElement} element\r\n     * @param {Object} options\r\n     * @param {Object} [options.slidesToScroll=1] Nombre d'éléments à faire défiler\r\n     * @param {Object} [options.slidesVisible=1] Nombre d'éléments visible dans un slide\r\n     * @param {boolean} [options.loop=false] Doit-t-on boucler en fin de carousel\r\n     * @param {boolean} [options.infinite=false]\r\n     * @param {boolean} [options.pagination=false]\r\n     * @param {boolean} [options.navigation=true]\r\n     */\r\n    constructor(element, options = {}) {\r\n        this.element = element\r\n        this.options = Object.assign({}, {\r\n            slidesToScroll: 1,\r\n            slidesVisible: 1,\r\n            loop: false,\r\n            pagination: false,\r\n            navigation: false,\r\n            infinite: false\r\n        }, options)\r\n        if (this.options.loop && this.options.infinite) {\r\n            throw new Error('Un carousel ne peut être à la fois en boucle et en infinie')\r\n        }\r\n        let children = [].slice.call(element.children)\r\n        this.isMobile = false\r\n        this.currentItem = 0\r\n        this.moveCallbacks = []\r\n        this.offset = 0\r\n\r\n        // Modification du DOM\r\n        this.root = this.createDivWithClass('carousel')\r\n        this.container = this.createDivWithClass('carousel__container')\r\n        this.root.setAttribute('tabindex', '0')\r\n        this.root.appendChild(this.container)\r\n        this.element.appendChild(this.root)\r\n        this.items = children.map((child) => {\r\n            let item = this.createDivWithClass('carousel__item')\r\n            item.appendChild(child)\r\n            return item\r\n        })\r\n        if (this.options.infinite) {\r\n            this.offset = this.options.slidesVisible + this.options.slidesToScroll\r\n            if (this.offset > children.length) {\r\n                console.error(\"Vous n'avez pas assez d'élément dans le carousel\", element)\r\n            }\r\n            this.items = [\r\n                ...this.items.slice(this.items.length - this.offset).map(item => item.cloneNode(true)),\r\n                ...this.items,\r\n                ...this.items.slice(0, this.offset).map(item => item.cloneNode(true)),\r\n            ]\r\n            this.gotoItem(this.offset, false)\r\n        }\r\n        this.items.forEach(item => this.container.appendChild(item))\r\n        this.setStyle()\r\n        if (this.options.navigation) {\r\n            this.createNavigation()\r\n        }\r\n        if (this.options.pagination) {\r\n            this.createPagination()\r\n        }\r\n\r\n        // Evenements\r\n        this.moveCallbacks.forEach(cb => cb(this.currentItem))\r\n        this.onWindowResize()\r\n        window.addEventListener('resize', this.onWindowResize.bind(this))\r\n        this.root.addEventListener('keyup', e => {\r\n            if (e.key === 'ArrowRight' || e.key === 'Right') {\r\n                this.next()\r\n            } else if (e.key === 'ArrowLeft' || e.key === 'Left') {\r\n                this.prev()\r\n            }\r\n        })\r\n        if (this.options.infinite) {\r\n            this.container.addEventListener('transitionend', this.resetInfinite.bind(this))\r\n        }\r\n        new CarouselTouchPlugin(this)\r\n    }\r\n\r\n    /**\r\n     * Applique les bonnes dimensions aux éléments du carousel\r\n     */\r\n    setStyle() {\r\n        let ratio = this.items.length / this.slidesVisible\r\n        this.container.style.width = (ratio * 100) + \"%\"\r\n        this.items.forEach(item => item.style.width = ((100 / this.slidesVisible) / ratio) + \"%\")\r\n    }\r\n\r\n    /**\r\n     * Crée les flêches de navigation dans le DOM\r\n     */\r\n    createNavigation() {\r\n        let nextButton = this.createDivWithClass('carousel__next')\r\n        let prevButton = this.createDivWithClass('carousel__prev')\r\n        this.root.appendChild(nextButton)\r\n        this.root.appendChild(prevButton)\r\n        nextButton.addEventListener('click', this.next.bind(this))\r\n        prevButton.addEventListener('click', this.prev.bind(this))\r\n        if (this.options.loop === true) {\r\n            return\r\n        }\r\n        this.onMove(index => {\r\n            if (index === 0) {\r\n                prevButton.classList.add('carousel__prev--hidden')\r\n            } else {\r\n                prevButton.classList.remove('carousel__prev--hidden')\r\n            }\r\n            if (this.items[this.currentItem + this.slidesVisible] === undefined) {\r\n                nextButton.classList.add('carousel__next--hidden')\r\n            } else {\r\n                nextButton.classList.remove('carousel__next--hidden')\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Crée la pagination dans le DOM\r\n     */\r\n    createPagination() {\r\n        let pagination = this.createDivWithClass('carousel__pagination')\r\n        let buttons = []\r\n        this.root.appendChild(pagination)\r\n        for (let i = 0; i < (this.items.length - 2 * this.offset); i = i + this.options.slidesToScroll) {\r\n            let button = this.createDivWithClass('carousel__pagination__button')\r\n            button.addEventListener('click', () => this.gotoItem(i + this.offset))\r\n            pagination.appendChild(button)\r\n            buttons.push(button)\r\n        }\r\n        this.onMove(index => {\r\n            let count = this.items.length - 2 * this.offset\r\n            let activeButton = buttons[Math.floor(((index - this.offset) % count) / this.options.slidesToScroll)]\r\n            if (activeButton) {\r\n                buttons.forEach(button => button.classList.remove('carousel__pagination__button--active'))\r\n                activeButton.classList.add('carousel__pagination__button--active')\r\n            }\r\n        })\r\n    }\r\n\r\n    translate(percent) {\r\n        this.container.style.transform = 'translate3d(' + percent + '%, 0, 0)'\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    next() {\r\n        this.gotoItem(this.currentItem + this.slidesToScroll)\r\n    }\r\n\r\n    prev() {\r\n        this.gotoItem(this.currentItem - this.slidesToScroll)\r\n    }\r\n\r\n    /**\r\n     * Déplace le carousel vers l'élément ciblé\r\n     * @param {number} index\r\n     * @param {boolean} [animation = true]\r\n     */\r\n    gotoItem(index, animation = true) {\r\n        if (index < 0) {\r\n            if (this.options.loop) {\r\n                index = this.items.length - this.slidesVisible\r\n            } else {\r\n                return\r\n            }\r\n        } else if (index >= this.items.length || (this.items[this.currentItem + this.slidesVisible] === undefined && index > this.currentItem)) {\r\n            if (this.options.loop) {\r\n                index = 0\r\n            } else {\r\n                return\r\n            }\r\n        }\r\n        let translateX = index * -100 / this.items.length\r\n        if (animation === false) {\r\n            this.disableTransition()\r\n        }\r\n        this.translate(translateX)\r\n        this.container.offsetHeight // force repaint\r\n        if (animation === false) {\r\n            this.enableTransition()\r\n        }\r\n        this.currentItem = index\r\n        this.moveCallbacks.forEach(cb => cb(index))\r\n    }\r\n\r\n    /**\r\n     * Déplace le container pour donner l'impression d'un slide infini\r\n     */\r\n    resetInfinite() {\r\n        if (this.currentItem <= this.options.slidesToScroll) {\r\n            this.gotoItem(this.currentItem + (this.items.length - 2 * this.offset), false)\r\n        } else if (this.currentItem >= this.items.length - this.offset) {\r\n            this.gotoItem(this.currentItem - (this.items.length - 2 * this.offset), false)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Rajoute un écouteur qui écoute le déplacement du carousel\r\n     * @param {moveCallback} cb\r\n     */\r\n    onMove(cb) {\r\n        this.moveCallbacks.push(cb)\r\n    }\r\n\r\n    /**\r\n     * Ecouteur pour le redimensionnement de la fenêtre\r\n     */\r\n    onWindowResize() {\r\n        let mobile = window.innerWidth < 800\r\n        if (mobile !== this.isMobile) {\r\n            this.isMobile = mobile\r\n            this.setStyle()\r\n            this.moveCallbacks.forEach(cb => cb(this.currentItem))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper pour créer une div avec une classe\r\n     * @param {string} className\r\n     * @returns {HTMLElement}\r\n     */\r\n    createDivWithClass(className) {\r\n        let div = document.createElement('div')\r\n        div.setAttribute('class', className)\r\n        return div\r\n    }\r\n\r\n    disableTransition() {\r\n        this.container.style.transition = 'none'\r\n    }\r\n\r\n    enableTransition() {\r\n        this.container.style.transition = ''\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get slidesToScroll() {\r\n        return this.isMobile ? 1 : this.options.slidesToScroll\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get slidesVisible() {\r\n        return this.isMobile ? 1 : this.options.slidesVisible\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get containerWidth() {\r\n        return this.container.offsetWidth\r\n    }\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get carouselWidth() {\r\n        return this.root.offsetWidth\r\n    }\r\n\r\n}\r\n\r\nlet onReady = function () {\r\n\r\n  new Carousel(document.querySelector('#carousel1'), {\r\n      slidesVisible: 1,\r\n      slidesToScroll: 1,\r\n      loop: true,\r\n      pagination: true,\r\n      navigation : true\r\n  })\r\n  new Carousel(document.querySelector('#carousel2'), {\r\n      slidesVisible: 1,\r\n      slidesToScroll: 1,\r\n      infinite: true,\r\n      pagination: true,\r\n  })\r\n  new Carousel(document.querySelector('#carousel3'), {\r\n      slidesVisible: 3,\r\n      slidesToScroll: 3,\r\n      infinite: true,\r\n      pagination: true,\r\n  })\r\n}\r\n\r\nif (document.readyState !== 'loading') {\r\n    onReady()\r\n}\r\ndocument.addEventListener('DOMContentLoaded', onReady)\r\n"]}